---
language: python
cache: pip
python:
  - "3.6"

services:
  - mysql
  - postgresql

# Required for Quay to use Postgres
# TODO: Move to the only job which runs on Postgres
#before_script:
#  - sh -c "if [ '$DB' = 'postgres' ]; then psql -U postgrs -c 'CREATE EXTENSION IF NOT EXISTS pg_trgm;' fi"

install:
  - sudo apt-get -y install python3-gpgme libgpgme11-dev
  - pip install -r requirements.txt
  - pip install -r requirements-tests.txt

stages:
  - lint
  - build
  - test
  - clean

jobs:
  include:

    # Run Flake8 to catch specific classes of errors
    - stage: lint
      name: Flake8
      script: flake8 . --count --max-line-length=100 --select=E9,F63,F7,F82 --show-source --statistics

    # Run `black` to ensure proper Python code-formatting
    - stage: lint
      name: Python Black
      script: black --line-length 100 --target-version py27 --check --diff .

    # Unit Tests (SQLite)
    - stage: test
      name: Unit Tests (SQLite)
      env:
        - TEST=true
        - ENCRYPTED_ROBOT_TOKEN_MIGRATION_PHASE=new-installation
      script: 
        alembic upgrade head
        py.test --cov="." --cov-report=html --cov-report=term-missing --timeout=3600 --verbose -x .

    # Unit Tests (MySQL)
    - stage: test
      name: Unit Tests (MySQL)
      env:
        - TEST=true
        - TEST_DATABASE_URI=mysql://travis:root@127.0.0.1
        - ENCRYPTED_ROBOT_TOKEN_MIGRATION_PHASE=new-installation
      script: 
        alembic upgrade head
        py.test --cov="." --cov-report=html --cov-report=term-missing --timeout=3600 --verbose -x .

    # Unit Tests (Postgres)
    - stage: test
      name: Unit Tests (Postgres)
      env:
        - TEST=true
        - TEST_DATABASE_URI=postgresql://travis:root@127.0.0.1
        - ENCRYPTED_ROBOT_TOKEN_MIGRATION_PHASE=new-installation
      script:
        alembic upgrade head
        py.test --cov="." --cov-report=html --cov-report=term-missing --timeout=3600 --verbose -x .

    # Registry Tests
    - stage: test
      name: Registry Tests
      env:
        - TEST=true
        - ENCRYPTED_ROBOT_TOKEN_MIGRATION_PHASE=new-installation
      script: py.test --cov="." --cov-report=html --cov-report=term-missing --timeout=3600 --verbose --show-count -x test/registry/registry_tests.py

    # Legacy Registry Tests
    - stage: test
      name: Legacy Registry Tests
      env:
        - TEST=true
        - ENCRYPTED_ROBOT_TOKEN_MIGRATION_PHASE=new-installation
      script: py.test --cov="." --cov-report=html --cov-report=term-missing --timeout=3600 --verbose --show-count -x test/registry_tests.py

#    - stage: test
#      name: Custom TLS certs test
#      # TODO: Better name to describe what is being verified?
#      script: test/test_certs_install.sh

#    - stage: test
#      name: Gunicorn worker test
#      python: '2.7'
#      script: scripts/ci gunicorn_test

#    - stage: test
#      name: MySQL unit tests (shard 1)
#      python: '2.7'
#      script: scripts/ci mysql shard_1_of_2
#    - stage: test
#      name: MySQL unit tests (shard 2)
#      python: '2.7'
#      script: scripts/ci mysql shard_2_of_2

#    - stage: test
#      name: Postgres unit tests (shard 1)
#      python: '2.7'
#      script: scripts/ci postgres shard_1_of_2
#    - stage: test
#      name: Postgres unit tests (shard 2)
#      python: '2.7'
#      script: scripts/ci postgres shard_2_of_2

#notifications:
#  slack:
#    rooms:
#      - secure: "fBR3YMXaOkoX2Iz7oSJVAw9zrcDoqwadiMEWTWhx7Ic0zoM8IieD2EWIcDHAoGpqf3ixHkc1v/iLBpbWHgvK7TkrSrGEbFyEmu/uomuHU8oGTiazWCbMWg9T2mhWYFyVaKtt8bzMbFo8k72kYK/NWV8bR4W/Qe/opkH2GGzfhZA="
#    on_success: change
#    on_failure: always
#    on_pull_requests: false
